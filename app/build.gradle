plugins 
{
    id 'java'
    id 'application'
}

group = 'com.github.francitoshi'
version = '0.0.1'

repositories 
{
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

def nutVersion = '0.1.39'
def bouncycastleVersion = '1.81'
def jlineVersion = '3.29.0'

configurations.all 
{
    resolutionStrategy 
    {
        force "com.github.francitoshi:nut-base:${nutVersion}"
        force "com.github.francitoshi:nut-core:${nutVersion}"
        force "com.github.francitoshi:nut-headless:${nutVersion}"
        force "org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}"
        force "org.bouncycastle:bcpkix-jdk18on:${bouncycastleVersion}"
        //failOnVersionConflict()
    }
}

dependencies 
{
    implementation "com.github.francitoshi:nut-base:${nutVersion}"
    implementation "com.github.francitoshi:nut-core:${nutVersion}"
    implementation "com.github.francitoshi:nut-headless:${nutVersion}"

    implementation "org.bouncycastle:bcprov-jdk18on:${bouncycastleVersion}"
    implementation "org.bouncycastle:bcpkix-jdk18on:${bouncycastleVersion}"
    
    implementation "org.jline:jline:${jlineVersion}"
    implementation "org.jline:jline-terminal:${jlineVersion}"
    implementation "org.jline:jline-reader:${jlineVersion}"

    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    implementation 'com.h2database:h2:2.3.232'
    implementation 'de.mkammerer:argon2-jvm:2.12'
    
    implementation 'org.yaml:snakeyaml:2.2'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    testImplementation 'com.icegreen:greenmail-junit5:2.0.1'
    testImplementation 'org.slf4j:slf4j-jdk14:2.0.17'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java 
{
    toolchain 
    {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application 
{
    mainClass = 'io.francitoshi.lettera.Main'
    applicationName = 'lettera'
}
jar 
{
    manifest 
    {
        attributes 'Main-Class': 'io.francitoshi.lettera.Main'
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Vendor': 'francitoshi@gmail.com'        
    }
}

tasks.named('test') 
{
    useJUnitPlatform()
}

task createDistribution(type: Copy) 
{
    from jar
    from configurations.runtimeClasspath
    into "${buildDir}/distribution"
}

// Añadir la tarea a la fase de compilación
build.dependsOn createDistribution
